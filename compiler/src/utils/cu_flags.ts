export const CU_FLAGS: Record<string, number> = {
  "nop": 0x0,
  "mov a b": 0x1,
  "mov a c": 0x2,
  "mov a d": 0x3,
  "mov b a": 0x4,
  "mov b c": 0x5,
  "mov b d": 0x6,
  "mov c a": 0x7,
  "mov c b": 0x8,
  "mov c d": 0x9,
  "mov d a": 0xa,
  "mov d b": 0xb,
  "mov d c": 0xc,
  "cmp a 0": 0xd,
  "cmp b 0": 0xe,
  "cmp c 0": 0xf,
  "cmp d 0": 0x10,
  "cmp a 1": 0x11,
  "cmp b 1": 0x12,
  "cmp c 1": 0x13,
  "cmp d 1": 0x14,
  "cmp a -1": 0x15,
  "cmp b -1": 0x16,
  "cmp c -1": 0x17,
  "cmp d -1": 0x18,
  "cmp a 255": 0x19,
  "cmp b 255": 0x1a,
  "cmp c 255": 0x1b,
  "cmp d 255": 0x1c,
  "cmp a a": 0x1d,
  "cmp a b": 0x1e,
  "cmp a c": 0x1f,
  "cmp a d": 0x20,
  "cmp b a": 0x21,
  "cmp b b": 0x22,
  "cmp b c": 0x23,
  "cmp b d": 0x24,
  "cmp c a": 0x25,
  "cmp c b": 0x26,
  "cmp c c": 0x27,
  "cmp c d": 0x28,
  "cmp d a": 0x29,
  "cmp d b": 0x2a,
  "cmp d c": 0x2b,
  "cmp d d": 0x2c,
  "jmp {label}": 0x2d,
  "jmp = {label}": 0x2e,
  "jmp != {label}": 0x2f,
  "jmp < {label}": 0x30,
  "jmp <= {label}": 0x31,
  "jmp > {label}": 0x32,
  "jmp >= {label}": 0x33,
  "jmp .< {label}": 0x34,
  "jmp .<= {label}": 0x35,
  "jmp .> {label}": 0x36,
  "jmp .>= {label}": 0x37,
  "jmp z {number}": 0x38,
  "jmp o {number}": 0x39,
  "jmp c {number}": 0x3a,
  "jmp s {number}": 0x3b,
  "jmpr {number}": 0x3c,
  "jmpr = {number}": 0x3d,
  "jmpr != {number}": 0x3e,
  "jmpr < {number}": 0x3f,
  "jmpr <= {number}": 0x40,
  "jmpr > {number}": 0x41,
  "jmpr >= {number}": 0x42,
  "jmpr .< {number}": 0x43,
  "jmpr .<= {number}": 0x44,
  "jmpr .> {number}": 0x45,
  "jmpr .>= {number}": 0x46,
  "jmpr z {number}": 0x47,
  "jmpr o {number}": 0x48,
  "jmpr c {number}": 0x49,
  "jmpr s {number}": 0x4a,
  "opp clr": 0x4b,
  "opp cmp off": 0x4c,
  "opp cmp on": 0x4d,
  "opp sign off": 0x4e,
  "opp sign on": 0x4f,
  "opp 0": 0x50,
  "opp 1": 0x51,
  "opp -1": 0x52,
  "opp a": 0x53,
  "opp b": 0x54,
  "opp c": 0x55,
  "opp d": 0x56,
  "opp ~a": 0x57,
  "opp ~b": 0x58,
  "opp ~c": 0x59,
  "opp ~d": 0x5a,
  "opp -a": 0x5b,
  "opp -b": 0x5c,
  "opp -c": 0x5d,
  "opp -d": 0x5e,
  "opp a+1": 0x5f,
  "opp b+1": 0x60,
  "opp c+1": 0x61,
  "opp d+1": 0x62,
  "opp a-1": 0x63,
  "opp b-1": 0x64,
  "opp c-1": 0x65,
  "opp d-1": 0x66,
  "opp a+b": 0x67,
  "opp a+c": 0x68,
  "opp a+d": 0x69,
  "opp b+a": 0x6a,
  "opp b+c": 0x6b,
  "opp b+d": 0x6c,
  "opp c+a": 0x6d,
  "opp c+b": 0x6e,
  "opp c+d": 0x6f,
  "opp d+a": 0x70,
  "opp d+b": 0x71,
  "opp d+c": 0x72,
  "opp a-b": 0x73,
  "opp a-c": 0x74,
  "opp a-d": 0x75,
  "opp b-a": 0x76,
  "opp b-c": 0x77,
  "opp b-d": 0x78,
  "opp c-a": 0x79,
  "opp c-b": 0x7a,
  "opp c-d": 0x7b,
  "opp d-a": 0x7c,
  "opp d-b": 0x7d,
  "opp d-c": 0x7e,
  "opp a*a": 0x7f,
  "opp a*b": 0x80,
  "opp a*c": 0x81,
  "opp a*d": 0x82,
  "opp b*a": 0x83,
  "opp b*b": 0x84,
  "opp b*c": 0x85,
  "opp b*d": 0x86,
  "opp c*a": 0x87,
  "opp c*b": 0x88,
  "opp c*c": 0x89,
  "opp c*d": 0x8a,
  "opp d*a": 0x8b,
  "opp d*b": 0x8c,
  "opp d*c": 0x8d,
  "opp d*d": 0x8e,
  "opp a.*a": 0x8f,
  "opp a.*b": 0x90,
  "opp a.*c": 0x91,
  "opp a.*d": 0x92,
  "opp b.*a": 0x93,
  "opp b.*b": 0x94,
  "opp b.*c": 0x95,
  "opp b.*d": 0x96,
  "opp c.*a": 0x97,
  "opp c.*b": 0x98,
  "opp c.*c": 0x99,
  "opp c.*d": 0x9a,
  "opp d.*a": 0x9b,
  "opp d.*b": 0x9c,
  "opp d.*c": 0x9d,
  "opp d.*d": 0x9e,
  "opp a/b": 0x9f,
  "opp a/c": 0xa0,
  "opp a/d": 0xa1,
  "opp b/a": 0xa2,
  "opp b/c": 0xa3,
  "opp b/d": 0xa4,
  "opp c/a": 0xa5,
  "opp c/b": 0xa6,
  "opp c/d": 0xa7,
  "opp d/a": 0xa8,
  "opp d/b": 0xa9,
  "opp d/c": 0xaa,
  "opp a&b": 0xab,
  "opp a&c": 0xac,
  "opp a&d": 0xad,
  "opp b&c": 0xae,
  "opp b&d": 0xaf,
  "opp c&d": 0xb0,
  "opp a|b": 0xb1,
  "opp a|c": 0xb2,
  "opp a|d": 0xb3,
  "opp b|c": 0xb4,
  "opp b|d": 0xb5,
  "opp c|d": 0xb6,
  "load ram[a] a": 0xb7,
  "load ram[a] b": 0xb8,
  "load ram[a] c": 0xb9,
  "load ram[a] d": 0xba,
  "load ram[b] a": 0xbb,
  "load ram[b] b": 0xbc,
  "load ram[b] c": 0xbd,
  "load ram[b] d": 0xbe,
  "load ram[c] a": 0xbf,
  "load ram[c] b": 0xc0,
  "load ram[c] c": 0xc1,
  "load ram[c] d": 0xc2,
  "load ram[d] a": 0xc3,
  "load ram[d] b": 0xc4,
  "load ram[d] c": 0xc5,
  "load ram[d] d": 0xc6,
  "load rom a {number}": 0xc7,
  "load rom b {number}": 0xc8,
  "load rom c {number}": 0xc9,
  "load rom d {number}": 0xca,
  "load ram[{number}] a": 0xcb,
  "load ram[{number}] b": 0xcc,
  "load ram[{number}] c": 0xcd,
  "load ram[{number}] d": 0xce,
  "set a rampage": 0xcf,
  "set b rampage": 0xd0,
  "set c rampage": 0xd1,
  "set d rampage": 0xd2,
  "save a mar": 0xd3,
  "save b mar": 0xd4,
  "save c mar": 0xd5,
  "save d mar": 0xd6,
  "save a ram[current]": 0xd7,
  "save b ram[current]": 0xd8,
  "save c ram[current]": 0xd9,
  "save d ram[current]": 0xda,
  "save a ram[a]": 0xdb,
  "save b ram[c]": 0xdc,
  "save c ram[d]": 0xdd,
  "save d ram[d]": 0xde,
  "save a ram[{number}]": 0xdf,
  "save b ram[{number}]": 0xe0,
  "save c ram[{number}]": 0xe1,
  "save d ram[{number}]": 0xe2,
  "in a": 0xe3,
  "in b": 0xe4,
  "in c": 0xe5,
  "in d": 0xe6,
  "out a": 0xe7,
  "out b": 0xe8,
  "out c": 0xe9,
  "out d": 0xea,
  "out {number}": 0xeb,
  "out ram[{number}]": 0xec,
  "out ram[a]": 0xed,
  "out ram[b]": 0xee,
  "out ram[c]": 0xef,
  "out ram[d]": 0xf0,
  "halt": 0xff,
};
